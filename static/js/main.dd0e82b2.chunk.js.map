{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","onChangeQuery","sortType","setSortType","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","client","href","email","name","App","setTodos","setSelectedTodo","setQuery","normalizedQuery","toLowerCase","todosFromServer","request","length","filteredTodos","filter","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd0e82b2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  '',\n                  {\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  {selectedTodo.id === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string;\n  onChangeQuery: (request: string) => void;\n  sortType: string;\n  setSortType: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  sortType,\n  setSortType,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortType}\n            onChange={(event) => {\n              setSortType(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onChangeQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onChangeQuery('');\n            }}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  selectTodo: (todo:Todo) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, selectTodo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(client => setUser(client));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                selectTodo({\n                  id: 0,\n                  title: '',\n                  completed: false,\n                  userId: 0,\n                });\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const defaultTodo = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState(defaultTodo);\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState('all');\n\n  const normalizedQuery = query.toLowerCase();\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const getFilteredTodos = () => {\n    let filteredTodos = [...todos];\n\n    switch (sortType) {\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n        break;\n\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n        break;\n\n      default:\n        filteredTodos = filteredTodos.map(todo => todo);\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase()\n        .includes(normalizedQuery));\n    }\n\n    return filteredTodos;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortType={sortType}\n                setSortType={setSortType}\n                query={query}\n                onChangeQuery={(request: string) => {\n                  setQuery(request);\n                }}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(todos.length > 0) ? (\n                <TodoList\n                  todos={getFilteredTodos()}\n                  selectedTodo={selectedTodo}\n                  selectTodo={(todo) => {\n                    setSelectedTodo(todo);\n                  }}\n                />\n              ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo.userId !== 0 && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectTodo={(todo) => {\n            setSelectedTodo(todo);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}